# Generated by Django 3.0.3 on 2020-05-30 19:12

from django.contrib.contenttypes.models import ContentType
from django.core.exceptions import ObjectDoesNotExist
from django.core.validators import MaxValueValidator
from django.db import migrations, models


def register_content_type(apps, schema_editor):
    """Registers AlertSettings if not yet registered"""
    try:
        ContentType.objects.get(app_label='sample_monitoring', model='alertsettings')
    except ObjectDoesNotExist:
        ct = ContentType(app_label='sample_monitoring', model='alertsettings')
        ct.save()


def unregister_content_type(apps, schema_editor):
    """Registers AlertSettings if not yet registered"""
    ct = ContentType.objects.get(app_label='sample_monitoring', model='alertsettings')
    ct.delete()


class Migration(migrations.Migration):

    dependencies = [
        ('sample_monitoring', '0002_add_details_field'),
    ]

    operations = [
        migrations.RenameModel('Threshold', 'AlertSettings'),
        migrations.AlterField(
            model_name='alertsettings',
            name='seconds',
            field=models.PositiveIntegerField(
                default=0,
                help_text='for how long should the alert_settings value be crossed before triggering an alert? The maximum allowed is 604800 seconds (7 days)',
                validators=[MaxValueValidator(604800)],
            ),
        ),
        migrations.AlterField(
            model_name='alertsettings',
            name='value',
            field=models.FloatField(help_text='alert settings value'),
        ),
        migrations.RunPython(register_content_type, unregister_content_type),
    ]
