---
name: OpenWISP Monitoring CI Build

on:
  push:
    branches:
      - master
      - dev
  pull_request:
    branches:
      - master
      - dev

jobs:
  build:
    name: Python==${{ matrix.python-version }} | ${{ matrix.django-version }}
    runs-on: ubuntu-20.04

    services:
      redis:
        image: redis
        ports:
          - 6379:6379
      influxdb:
        image: influxdb:alpine
        options: >-
          --name "influxdb"
        ports:
          - 8086:8086

    strategy:
      fail-fast: false
      matrix:
        python-version:
          - 3.6
          - 3.7
        django-version:
          - django~=3.0
          - django~=3.1

    steps:
      - uses: actions/checkout@v2
        with:
          ref: ${{ github.event.pull_request.head.sha }}

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install system packages
        run: |
          sudo apt update &&
          sudo apt -qq install \
          sqlite3 \
          fping \
          gdal-bin \
          libproj-dev \
          libgeos-dev \
          libspatialite-dev \
          spatialite-bin \
          libsqlite3-mod-spatialite

      - name: Install python dependencies
        run: |
          pip install -U "pip==20.2.4" wheel setuptools
          pip install ${{ matrix.django-version }}
          pip install -U -r requirements-test.txt

      - name: Install openwisp-monitoring
        run: pip install -e .

      - name: QA checks
        run: |
          ./run-qa-checks

      - name: Tests
        run: |
          SAMPLE_APP=1 coverage run --source=openwisp_monitoring runtests.py
          coverage run -a --source=openwisp_monitoring runtests.py

      - name: Upload Coverage
        run: coveralls --service=github
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          COVERALLS_FLAG_NAME: |
           python-${{ matrix.python-version }}-${{ matrix.django-version }}
          COVERALLS_PARALLEL: true

  deploy:
    name: Deploy Docker Image
    runs-on: ubuntu-20.04
    needs:
      - build

    if: ${{ github.event_name == 'push' && github.ref == 'refs/heads/master' }}
    steps:
      - uses: actions/checkout@master

      - name: Push to Docker
        run: |
          echo "${{ secrets.DOCKER_TOKEN }}" | docker login --username ${{ secrets.DOCKER_USERNAME }} --password-stdin
          docker build . -t openwisp/openwisp-monitoring:develop
          docker push openwisp/openwisp-monitoring:develop

  coveralls:
    name: Finish Coveralls
    needs: build
    runs-on: ubuntu-latest
    container: python:3-slim
    steps:
      - name: Finished
        run: |
          pip3 install --upgrade coveralls
          coveralls --finish
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
